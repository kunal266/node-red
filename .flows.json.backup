[
    {
        "id": "3dfbcfcfa23b657e",
        "type": "tab",
        "label": "Flow 3",
        "disabled": true,
        "info": ""
    },
    {
        "id": "6fdccfe0f118919f",
        "type": "tab",
        "label": "Flow 4",
        "disabled": true,
        "info": ""
    },
    {
        "id": "7264535099ada3c6",
        "type": "tab",
        "label": "Flow 5",
        "disabled": true,
        "info": ""
    },
    {
        "id": "b7bffd295b9a1b79",
        "type": "tab",
        "label": "Flow 6",
        "disabled": true,
        "info": ""
    },
    {
        "id": "5d1f9e1affaa105e",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "a064a86037099939",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": ""
    },
    {
        "id": "56f9fb6c7ee514f6",
        "type": "tab",
        "label": "Flow 7",
        "disabled": true,
        "info": ""
    },
    {
        "id": "78135e01e7bf3912",
        "type": "tab",
        "label": "Flow 8",
        "disabled": true,
        "info": ""
    },
    {
        "id": "d9830cb15703caf0",
        "type": "tab",
        "label": "Flow 9",
        "disabled": true,
        "info": ""
    },
    {
        "id": "d307e0ca6d797edf",
        "type": "tab",
        "label": "Flow 10",
        "disabled": true,
        "info": ""
    },
    {
        "id": "84cccc49d234268f",
        "type": "tab",
        "label": "Flow 11",
        "disabled": true,
        "info": ""
    },
    {
        "id": "a825008ae6c1e04d",
        "type": "tab",
        "label": "Flow 12",
        "disabled": true,
        "info": ""
    },
    {
        "id": "f77948e64a14ed55",
        "type": "tab",
        "label": "Flow 13",
        "disabled": true,
        "info": ""
    },
    {
        "id": "9d0c5c52f81ad19e",
        "type": "tab",
        "label": "Flow 14",
        "disabled": true,
        "info": ""
    },
    {
        "id": "2a17b197dd3c27c2",
        "type": "tab",
        "label": "Flow 15",
        "disabled": true,
        "info": ""
    },
    {
        "id": "24eca7dc1cf10744",
        "type": "tab",
        "label": "Flow 16",
        "disabled": true,
        "info": ""
    },
    {
        "id": "d8c79dd1e303ba01",
        "type": "tab",
        "label": "Flow 17",
        "disabled": true,
        "info": ""
    },
    {
        "id": "c143c776df5ef85e",
        "type": "tab",
        "label": "Flow 18",
        "disabled": true,
        "info": ""
    },
    {
        "id": "79dac7d47c5c93a7",
        "type": "tab",
        "label": "Flow 19",
        "disabled": true,
        "info": ""
    },
    {
        "id": "ebb053fb20be421a",
        "type": "tab",
        "label": "Flow 20",
        "disabled": true,
        "info": ""
    },
    {
        "id": "1f921bef89399c18",
        "type": "tab",
        "label": "Flow 21",
        "disabled": true,
        "info": ""
    },
    {
        "id": "536875e48145519a",
        "type": "tab",
        "label": "Flow 22",
        "disabled": true,
        "info": ""
    },
    {
        "id": "7c02d0a78670807d",
        "type": "tab",
        "label": "Flow 23",
        "disabled": true,
        "info": ""
    },
    {
        "id": "76141d478b7316ee",
        "type": "tab",
        "label": "file r/w",
        "disabled": true,
        "info": ""
    },
    {
        "id": "c95e02108b61b0af",
        "type": "tab",
        "label": "Flow 25",
        "disabled": true,
        "info": ""
    },
    {
        "id": "03f916c589e3ffbb",
        "type": "tab",
        "label": "read_file ex1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "541eab435004a66f",
        "type": "tab",
        "label": "Flow 27",
        "disabled": true,
        "info": ""
    },
    {
        "id": "a5a273d7b36f94a4",
        "type": "tab",
        "label": "Flow 26",
        "disabled": true,
        "info": ""
    },
    {
        "id": "7b11ae5524b65977",
        "type": "tab",
        "label": "Flow 24",
        "disabled": true,
        "info": ""
    },
    {
        "id": "c9d5f45de1504c98",
        "type": "tab",
        "label": "FRED server",
        "disabled": true,
        "info": ""
    },
    {
        "id": "421f3dd88fac8d7e",
        "type": "tab",
        "label": "Flow 30",
        "disabled": true,
        "info": ""
    },
    {
        "id": "f444ec4d3b529ef7",
        "type": "tab",
        "label": "Flow 5",
        "disabled": true,
        "info": ""
    },
    {
        "id": "071671d0decd80ce",
        "type": "tab",
        "label": "Flow 29",
        "disabled": true,
        "info": ""
    },
    {
        "id": "a9fc6b73f762302d",
        "type": "tab",
        "label": "Flow 31",
        "disabled": true,
        "info": ""
    },
    {
        "id": "ca8a5cc0046eca93",
        "type": "tab",
        "label": "Flow 32",
        "disabled": true,
        "info": ""
    },
    {
        "id": "91ad17c662921ae4",
        "type": "tab",
        "label": "Flow 33",
        "disabled": true,
        "info": ""
    },
    {
        "id": "f48aaeef23605001",
        "type": "tab",
        "label": "web app",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "d22c141a78fa65eb",
        "type": "tab",
        "label": "Flow 28",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c8c78f4d.679e8",
        "type": "subflow",
        "name": "csvColumnParser",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 70,
                "y": 80,
                "wires": [
                    {
                        "id": "a8857356.d49e68"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 80,
                "wires": [
                    {
                        "id": "d71e0bef.46647",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "0964b369410d0d4e",
        "type": "mqtt-broker",
        "name": "bruhhhhh",
        "broker": "localhost",
        "port": "1885",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "83125750f53cd3fb",
        "type": "mqtt-broker",
        "name": "bruh1",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "dd969d2656fade9e",
        "type": "ui_group",
        "name": "charts",
        "tab": "4aea2e4653e969c1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "07ab38be7e1485ff",
        "type": "ui_tab",
        "name": "Demo",
        "icon": "dashboard",
        "disabled": true,
        "hidden": false
    },
    {
        "id": "9ed04abb86c92676",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "69d5f6e378987ee1",
        "type": "ui_group",
        "name": "Analog",
        "tab": "07ab38be7e1485ff",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "77fca34203602aa4",
        "type": "ui_tab",
        "name": "mqtt_dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4555bee972562605",
        "type": "ui_tab",
        "name": "Agriculture",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c987525d9cb0fbf3",
        "type": "twilio-api",
        "name": "twilio",
        "sid": "ACf97f8a45d814ef9ab81bf84f7058d217",
        "from": "+13212803044"
    },
    {
        "id": "90792918f69570b1",
        "type": "ui_group",
        "name": "Slider",
        "tab": "4555bee972562605",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4aea2e4653e969c1",
        "type": "ui_tab",
        "name": "mqtt_dass",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ac5b66c3a556b349",
        "type": "ui_tab",
        "name": "charts_output",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f1cc08defacef229",
        "type": "ui_group",
        "name": "chartsss",
        "tab": "4aea2e4653e969c1",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3ca39898fc4e7f20",
        "type": "ui_group",
        "name": "Electrical Cond.",
        "tab": "4aea2e4653e969c1",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c915e63700f12513",
        "type": "ui_group",
        "name": "pH",
        "tab": "4aea2e4653e969c1",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ca324de2eaec5a1f",
        "type": "ui_group",
        "name": "ORP",
        "tab": "4aea2e4653e969c1",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fb97cd149b00f67b",
        "type": "ui_group",
        "name": "DO",
        "tab": "4aea2e4653e969c1",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6e8d8bee5d84e127",
        "type": "ui_group",
        "name": "temp",
        "tab": "4aea2e4653e969c1",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "cbbbd8214b09b908",
        "type": "ui_group",
        "name": "Quality",
        "tab": "4aea2e4653e969c1",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "efa2f010528b13ec",
        "type": "coap-server",
        "name": "IOT coap server",
        "port": "5683"
    },
    {
        "id": "87ce5802d8ebbb1b",
        "type": "coap-server",
        "name": "bruh",
        "port": "5683"
    },
    {
        "id": "7f4721321d8f66be",
        "type": "coap-server",
        "name": "hahahalol",
        "port": "5685"
    },
    {
        "id": "6229c52411094b95",
        "type": "fred-client",
        "endpoint": "MIoT",
        "private": false,
        "username": "dopemex",
        "wholemsg": "false"
    },
    {
        "id": "fd2659218a7a58bc",
        "type": "fred-client",
        "endpoint": "MIOT",
        "private": false,
        "username": "dopemex",
        "wholemsg": "false"
    },
    {
        "id": "21c9b80c00806814",
        "type": "fred-client",
        "endpoint": "bruh",
        "private": false,
        "username": "dopemex",
        "wholemsg": "false"
    },
    {
        "id": "93604f4cc1f7efd2",
        "type": "ui_group",
        "name": "Lab13",
        "tab": "35d7f3e228c07fb9",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "35d7f3e228c07fb9",
        "type": "ui_tab",
        "name": "Lab13",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b82da486.9fc8d8",
        "type": "ui_group",
        "name": "Signin",
        "tab": "d65502b1.ee517",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c35e46a8.b04ce8",
        "type": "ui_group",
        "name": "SensorData",
        "tab": "d65502b1.ee517",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4de9506d.e7364",
        "type": "ui_group",
        "name": "History",
        "tab": "d65502b1.ee517",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d65502b1.ee517",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a8857356.d49e68",
        "type": "csv",
        "z": "c8c78f4d.679e8",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "d12b5d18.58218"
            ]
        ]
    },
    {
        "id": "3b501c89.fa554c",
        "type": "split",
        "z": "c8c78f4d.679e8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 540,
        "y": 80,
        "wires": [
            [
                "6dad6ed9.c91f08"
            ]
        ]
    },
    {
        "id": "6dad6ed9.c91f08",
        "type": "function",
        "z": "c8c78f4d.679e8",
        "name": "",
        "func": "if (!context.results) context.results = {}\n\nif (!context.results[msg.topic]) context.results[msg.topic] = []\ncontext.results[msg.topic].push(msg.payload)\nmsg.payload = context.results\n\nif ((msg.originalParts.index === msg.originalParts.count - 1) && (msg.parts.index === msg.parts.count - 1)) {\n    msg.payload = context.results\n    context.results = {}\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 80,
        "wires": [
            [
                "d71e0bef.46647"
            ]
        ]
    },
    {
        "id": "d12b5d18.58218",
        "type": "change",
        "z": "c8c78f4d.679e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "originalParts",
                "pt": "msg",
                "to": "parts",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 80,
        "wires": [
            [
                "3b501c89.fa554c"
            ]
        ]
    },
    {
        "id": "d71e0bef.46647",
        "type": "change",
        "z": "c8c78f4d.679e8",
        "name": "spread",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$spread(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3d44186621e31e6d",
        "type": "ui_button",
        "z": "3dfbcfcfa23b657e",
        "name": "",
        "group": "dd969d2656fade9e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Hello World",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 280,
        "wires": [
            [
                "edfbdef6f1588129",
                "1d0bba28a308f0f4"
            ]
        ]
    },
    {
        "id": "1d0bba28a308f0f4",
        "type": "debug",
        "z": "3dfbcfcfa23b657e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "edfbdef6f1588129",
        "type": "ui_text",
        "z": "3dfbcfcfa23b657e",
        "group": "dd969d2656fade9e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kunal Makwana",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 980,
        "y": 200,
        "wires": []
    },
    {
        "id": "359c1cda5f168f4e",
        "type": "ui_slider",
        "z": "3dfbcfcfa23b657e",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "group": "90792918f69570b1",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "300",
        "step": 1,
        "x": 260,
        "y": 440,
        "wires": [
            [
                "ac7545f7ed3d7771"
            ]
        ]
    },
    {
        "id": "ac7545f7ed3d7771",
        "type": "ui_gauge",
        "z": "3dfbcfcfa23b657e",
        "name": "",
        "group": "90792918f69570b1",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 540,
        "y": 440,
        "wires": []
    },
    {
        "id": "e37befcdda20551e",
        "type": "openweathermap",
        "z": "6fdccfe0f118919f",
        "name": "bruh",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "mumbai",
        "country": "India",
        "language": "en",
        "x": 430,
        "y": 160,
        "wires": [
            [
                "3b12d95db4616998",
                "f6edb153301da23b"
            ]
        ]
    },
    {
        "id": "3b12d95db4616998",
        "type": "debug",
        "z": "6fdccfe0f118919f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 240,
        "wires": []
    },
    {
        "id": "f6edb153301da23b",
        "type": "ui_gauge",
        "z": "6fdccfe0f118919f",
        "name": "",
        "group": "dd969d2656fade9e",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{msg.payload.tempc}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "dcf18a6777937994",
        "type": "inject",
        "z": "6fdccfe0f118919f",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "e37befcdda20551e"
            ]
        ]
    },
    {
        "id": "4b73b25fe51655e4",
        "type": "openweathermap",
        "z": "7264535099ada3c6",
        "name": "bruh",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "mumbai",
        "country": "India",
        "language": "en",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "1c2b8cd171d17f4a",
                "40b03fcaaad22b85",
                "f8088592395e4343"
            ]
        ]
    },
    {
        "id": "1c2b8cd171d17f4a",
        "type": "debug",
        "z": "7264535099ada3c6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "40b03fcaaad22b85",
        "type": "ui_gauge",
        "z": "7264535099ada3c6",
        "name": "",
        "group": "90792918f69570b1",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feels Like",
        "label": "Celcius",
        "format": "{{msg.payload.tempc}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 790,
        "y": 200,
        "wires": []
    },
    {
        "id": "d80a3483fe76bd7d",
        "type": "inject",
        "z": "7264535099ada3c6",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "4b73b25fe51655e4"
            ]
        ]
    },
    {
        "id": "f8088592395e4343",
        "type": "function",
        "z": "7264535099ada3c6",
        "name": "",
        "func": "if (msg.payload.weather === \"Haze\"){\n    msg.payload = \"Stay Safe its Haze\";\n    return msg;\n}\nif (msg.payload.weather ===\"Clear\"){\n    mss.payload = \"Stay Happy, It's Clear\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 400,
        "wires": [
            [
                "2cb262e2bc67fbdb"
            ]
        ]
    },
    {
        "id": "2cb262e2bc67fbdb",
        "type": "ui_text",
        "z": "7264535099ada3c6",
        "group": "90792918f69570b1",
        "order": 4,
        "width": "6",
        "height": "3",
        "name": "",
        "label": "Comment",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 890,
        "y": 420,
        "wires": []
    },
    {
        "id": "dd6371f6effac76a",
        "type": "openweathermap",
        "z": "b7bffd295b9a1b79",
        "name": "bruh",
        "wtype": "onecall",
        "lon": "72.877426",
        "lat": "19.076090",
        "city": "",
        "country": "",
        "language": "en",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "c9102043b83e7548",
                "b0fd8e355cd90e97",
                "34a63c0db52fbade"
            ]
        ]
    },
    {
        "id": "c9102043b83e7548",
        "type": "debug",
        "z": "b7bffd295b9a1b79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 280,
        "wires": []
    },
    {
        "id": "b0fd8e355cd90e97",
        "type": "ui_gauge",
        "z": "b7bffd295b9a1b79",
        "name": "",
        "group": "dd969d2656fade9e",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature in Celcius",
        "label": "Celcius",
        "format": "{{msg.payload.daily[0].temp.max}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 980,
        "y": 180,
        "wires": []
    },
    {
        "id": "78703391f2c6e9b3",
        "type": "inject",
        "z": "b7bffd295b9a1b79",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "dd6371f6effac76a"
            ]
        ]
    },
    {
        "id": "34a63c0db52fbade",
        "type": "function",
        "z": "b7bffd295b9a1b79",
        "name": "",
        "func": "if (msg.payload.daily[0].weather[0].main === \"Rain\"){\n    msg.payload = \"It's going to rain today, Please Take Care\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 380,
        "wires": [
            [
                "2068f992fa10f4d0",
                "24dddeb9a9e986c5"
            ]
        ]
    },
    {
        "id": "2068f992fa10f4d0",
        "type": "debug",
        "z": "b7bffd295b9a1b79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 520,
        "wires": []
    },
    {
        "id": "24dddeb9a9e986c5",
        "type": "ui_text",
        "z": "b7bffd295b9a1b79",
        "group": "dd969d2656fade9e",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "forecast",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1030,
        "y": 360,
        "wires": []
    },
    {
        "id": "da675b941371a6ed",
        "type": "e-mail",
        "z": "5d1f9e1affaa105e",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "dopemex851@mnqlm.com",
        "dname": "temp-mail",
        "x": 880,
        "y": 480,
        "wires": []
    },
    {
        "id": "b59f1174855c73d8",
        "type": "inject",
        "z": "5d1f9e1affaa105e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Kunal Mak",
        "payload": "kunal Makwana 19BAI1011",
        "payloadType": "str",
        "x": 430,
        "y": 320,
        "wires": [
            [
                "da675b941371a6ed"
            ]
        ]
    },
    {
        "id": "2c344af42802a3a5",
        "type": "twilio out",
        "z": "a064a86037099939",
        "twilio": "c987525d9cb0fbf3",
        "twilioType": "sms",
        "url": "",
        "number": "+918652225866",
        "name": "kunal makwana 19BAI1011",
        "x": 1100,
        "y": 400,
        "wires": []
    },
    {
        "id": "4b1ee438768a5f85",
        "type": "inject",
        "z": "a064a86037099939",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "hahah",
        "payload": "Hello This is kunal Makwana from VIT 19BAI1011",
        "payloadType": "str",
        "x": 750,
        "y": 400,
        "wires": [
            [
                "2c344af42802a3a5"
            ]
        ]
    },
    {
        "id": "cbc64ee73cca0847",
        "type": "inject",
        "z": "56f9fb6c7ee514f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 540,
        "y": 340,
        "wires": [
            [
                "1a9aaa8216b86b61"
            ]
        ]
    },
    {
        "id": "1a9aaa8216b86b61",
        "type": "function",
        "z": "56f9fb6c7ee514f6",
        "name": "",
        "func": "if (!context.value){\n    context.value=0;\n}\ncontext.value+=1;\nmsg.count = context.value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 340,
        "wires": [
            [
                "2de16a43511917b5"
            ]
        ]
    },
    {
        "id": "2de16a43511917b5",
        "type": "debug",
        "z": "56f9fb6c7ee514f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 380,
        "wires": []
    },
    {
        "id": "45a6d6f5926e80d4",
        "type": "inject",
        "z": "78135e01e7bf3912",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 460,
        "y": 260,
        "wires": [
            [
                "4a9f63ce8fea6c3e"
            ]
        ]
    },
    {
        "id": "4a9f63ce8fea6c3e",
        "type": "function",
        "z": "78135e01e7bf3912",
        "name": "Start Time",
        "func": "context.global.startTime = new Date().getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 380,
        "wires": [
            [
                "9de5a14a277e00f8"
            ]
        ]
    },
    {
        "id": "9de5a14a277e00f8",
        "type": "delay",
        "z": "78135e01e7bf3912",
        "name": "Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "3",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "22526a97a3a6f63a"
            ]
        ]
    },
    {
        "id": "22526a97a3a6f63a",
        "type": "function",
        "z": "78135e01e7bf3912",
        "name": "time Elapsed",
        "func": "var currentTime = new Date().getTime();\nvar timeElapsed = (currentTime-context.global.startTime);\nmsg.payload = \"Time Elapsed is: \"+timeElapsed +\" milliseconds\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 380,
        "wires": [
            [
                "4acbb00f59046d1d"
            ]
        ]
    },
    {
        "id": "4acbb00f59046d1d",
        "type": "debug",
        "z": "78135e01e7bf3912",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 280,
        "wires": []
    },
    {
        "id": "9ca480ab82d2f9f0",
        "type": "http in",
        "z": "d307e0ca6d797edf",
        "name": "IOT Domain",
        "url": "/project",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "8e3822b2bcd29aed"
            ]
        ]
    },
    {
        "id": "8e3822b2bcd29aed",
        "type": "function",
        "z": "d307e0ca6d797edf",
        "name": "",
        "func": "msg.url=\"project\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 240,
        "wires": [
            [
                "e4477e949eb2c5d2"
            ]
        ]
    },
    {
        "id": "e4477e949eb2c5d2",
        "type": "template",
        "z": "d307e0ca6d797edf",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n    <head>\n        <h1 style=\"background-color:DodgeBlue;\">Iot Domain</h1>\n    </head>\n    <body>\n        <p style=\"background-color:Tomato;\">\n            <ol>\n                <li>\n                    Enter Your Name.\n                </li>\n                <li>\n                    Registration Number.\n                </li>\n            </ol>\n        </p>\n<h4>\n    <a href=\"https://projectmark.com\">Project Mark</a>\n</h4>\n<form method=\"post\" action=\"/{{url}}\">\n    <label for=\"name\">First Name:</label><br>\n    <input type=\"text\" id=\"fname\" name=\"fname\"><br>\n    <label for=\"reg\">Reg NO:</label><br>\n    <input type=\"text\" id=\"reg\" name=\"reg\"><br>\n    <label for=\"topic\">Project Title:</label><br>\n    <input type=\"text\" id=\"topic\" name=\"Project Topic\"><br>\n    <input type=\"submit\" value=\"Submit\">\n    <input type=\"reset\" value=\"RESET\">\n</form>\n    </body>\n</html>",
        "output": "str",
        "x": 770,
        "y": 300,
        "wires": [
            [
                "6f10ed49997456b6"
            ]
        ]
    },
    {
        "id": "6f10ed49997456b6",
        "type": "http response",
        "z": "d307e0ca6d797edf",
        "name": "Iot Domain",
        "statusCode": "",
        "headers": {},
        "x": 1100,
        "y": 300,
        "wires": []
    },
    {
        "id": "2559dceeb94c411a",
        "type": "comment",
        "z": "d307e0ca6d797edf",
        "name": "Login Form",
        "info": "",
        "x": 420,
        "y": 220,
        "wires": []
    },
    {
        "id": "55b2c60465f70a1a",
        "type": "comment",
        "z": "d307e0ca6d797edf",
        "name": "Submission Form",
        "info": "",
        "x": 500,
        "y": 460,
        "wires": []
    },
    {
        "id": "328f170fb07ec341",
        "type": "http in",
        "z": "d307e0ca6d797edf",
        "name": "IOT Domain",
        "url": "/project",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 600,
        "wires": [
            [
                "6a2ee0dc3ff86637",
                "b88b531d2feb3ef6"
            ]
        ]
    },
    {
        "id": "6a2ee0dc3ff86637",
        "type": "json",
        "z": "d307e0ca6d797edf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 540,
        "wires": [
            [
                "808fff913f7dcfa0"
            ]
        ]
    },
    {
        "id": "808fff913f7dcfa0",
        "type": "function",
        "z": "d307e0ca6d797edf",
        "name": "",
        "func": "msg.payload=\"The Following data was submitted and available in the msg.payload \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 520,
        "wires": [
            [
                "0cb1f603ec883935"
            ]
        ]
    },
    {
        "id": "b88b531d2feb3ef6",
        "type": "debug",
        "z": "d307e0ca6d797edf",
        "name": "My Site Post",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 700,
        "wires": []
    },
    {
        "id": "0cb1f603ec883935",
        "type": "http response",
        "z": "d307e0ca6d797edf",
        "name": "Submitted",
        "statusCode": "",
        "headers": {},
        "x": 1020,
        "y": 580,
        "wires": []
    },
    {
        "id": "c8e3362b2f41bcdf",
        "type": "http in",
        "z": "84cccc49d234268f",
        "name": "IOT Domain",
        "url": "/switch",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "e2f7a6007ae58701"
            ]
        ]
    },
    {
        "id": "e2f7a6007ae58701",
        "type": "function",
        "z": "84cccc49d234268f",
        "name": "",
        "func": "msg.url=\"switch\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 40,
        "wires": [
            [
                "35c17ea4e094cb5c"
            ]
        ]
    },
    {
        "id": "35c17ea4e094cb5c",
        "type": "template",
        "z": "84cccc49d234268f",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n    <head>\n        <h1 style=\"background-color:DodgeBlue;\">Smart Home  using Node Red</h1>\n    </head>\n    <body>\n        <p style=\"background-color:Tomato;\">\n            <ol>\n                <li>\n                   IF Light is on or off\n                </li>\n                <li>\n                    If Door is Closed or not\n                </li>\n            </ol>\n        </p>\n\n<form method=\"post\" action=\"/bruh\">\n    <h3>Is light on or off ?</h3> \n    <input type=\"radio\" name = \"light\" value=\"ON\"> ON <br>\n<input type=\"radio\" name = \"light\" value=\"OFF\"> OFF <br>\n<h3>The Door is ?</h3> \n    <input type=\"radio\" name = \"Door\" value=\"Closed\"> Closed <br>\n<input type=\"radio\" name = \"Door\" value=\"Open\"> OFF <br>\n    <input type=\"submit\" value=\"Submit\">\n    <input type=\"reset\" value=\"RESET\">\n</form>\n    </body>\n</html>",
        "output": "str",
        "x": 810,
        "y": 100,
        "wires": [
            [
                "20247b738f2044a3"
            ]
        ]
    },
    {
        "id": "20247b738f2044a3",
        "type": "http response",
        "z": "84cccc49d234268f",
        "name": "Iot Domain",
        "statusCode": "",
        "headers": {},
        "x": 1140,
        "y": 100,
        "wires": []
    },
    {
        "id": "2e0580efbea5e030",
        "type": "comment",
        "z": "84cccc49d234268f",
        "name": "Login Form",
        "info": "",
        "x": 460,
        "y": 20,
        "wires": []
    },
    {
        "id": "c336bcdc6102833b",
        "type": "comment",
        "z": "84cccc49d234268f",
        "name": "Submission Form",
        "info": "",
        "x": 540,
        "y": 260,
        "wires": []
    },
    {
        "id": "ebcc68093f68b9f3",
        "type": "http in",
        "z": "84cccc49d234268f",
        "name": "IOT Domain",
        "url": "/bruh",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 530,
        "y": 400,
        "wires": [
            [
                "73d4d3c8a25465d6",
                "d8f3e7fa5e96583b"
            ]
        ]
    },
    {
        "id": "73d4d3c8a25465d6",
        "type": "debug",
        "z": "84cccc49d234268f",
        "name": "My Site Post",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.Door",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 500,
        "wires": []
    },
    {
        "id": "fa09effd03d40065",
        "type": "http response",
        "z": "84cccc49d234268f",
        "name": "Submitted",
        "statusCode": "",
        "headers": {},
        "x": 1060,
        "y": 380,
        "wires": []
    },
    {
        "id": "d8f3e7fa5e96583b",
        "type": "json",
        "z": "84cccc49d234268f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 300,
        "wires": [
            [
                "628f9410d76acc5a"
            ]
        ]
    },
    {
        "id": "628f9410d76acc5a",
        "type": "function",
        "z": "84cccc49d234268f",
        "name": "",
        "func": "msg.payload=\"The Following data was submitted and available in the msg.payload \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 280,
        "wires": [
            [
                "fa09effd03d40065"
            ]
        ]
    },
    {
        "id": "6675b6639ed086d0",
        "type": "http request",
        "z": "a825008ae6c1e04d",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://demo.thingsboard.io/api/v1/bq5mWNWZTqTmHjEeanYT/telemetry",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1210,
        "y": 120,
        "wires": [
            [
                "2beef1e8ab20dafe"
            ]
        ]
    },
    {
        "id": "2beef1e8ab20dafe",
        "type": "debug",
        "z": "a825008ae6c1e04d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 240,
        "wires": []
    },
    {
        "id": "0b8a4a6a03f2efc4",
        "type": "inject",
        "z": "a825008ae6c1e04d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"temperature\":21,\"light\":\"ON\"}",
        "payloadType": "json",
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "6675b6639ed086d0"
            ]
        ]
    },
    {
        "id": "d04db4b3f814918a",
        "type": "inject",
        "z": "f77948e64a14ed55",
        "name": "Inject code every 6 sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 720,
        "y": 240,
        "wires": [
            [
                "f82dabac0439e381"
            ]
        ]
    },
    {
        "id": "f82dabac0439e381",
        "type": "function",
        "z": "f77948e64a14ed55",
        "name": "",
        "func": "msg.payload = Math.round(Math.random()*100);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 300,
        "wires": [
            [
                "3c84ef7f1ce396c7"
            ]
        ]
    },
    {
        "id": "3c84ef7f1ce396c7",
        "type": "debug",
        "z": "f77948e64a14ed55",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 280,
        "wires": []
    },
    {
        "id": "880abb2f54731962",
        "type": "inject",
        "z": "9d0c5c52f81ad19e",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Humidity\":0,\"Temperature\":0,\"Light\":\"OFF\"}",
        "payloadType": "json",
        "x": 450,
        "y": 280,
        "wires": [
            [
                "04ae006791236954"
            ]
        ]
    },
    {
        "id": "04ae006791236954",
        "type": "function",
        "z": "9d0c5c52f81ad19e",
        "name": "",
        "func": "msg.payload.Humidity= Math.round(Math.random()*80 + 20);\nmsg.payload.Temperature = Math.round(Math.random()*80 + 20); \nif (msg.payload.Humidity>20 && msg.payload.Temperature >30){\n    msg.payload.Light = \"ON\";\n}\nelse{\n    msg.payload.Light = \"OFF\";    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 200,
        "wires": [
            [
                "a662b7d5f6c7d5a4",
                "2efcfe9a52fbdc2f"
            ]
        ]
    },
    {
        "id": "a662b7d5f6c7d5a4",
        "type": "http request",
        "z": "9d0c5c52f81ad19e",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://demo.thingsboard.io/api/v1/eN73nLy3h4jqYUUAPfcX/telemetry",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 790,
        "y": 280,
        "wires": [
            [
                "9b64a7471e92e0be"
            ]
        ]
    },
    {
        "id": "9b64a7471e92e0be",
        "type": "debug",
        "z": "9d0c5c52f81ad19e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 360,
        "wires": []
    },
    {
        "id": "2efcfe9a52fbdc2f",
        "type": "debug",
        "z": "9d0c5c52f81ad19e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 360,
        "wires": []
    },
    {
        "id": "7c4bca0caabe8aff",
        "type": "mqtt in",
        "z": "2a17b197dd3c27c2",
        "name": "sub",
        "topic": "bruh/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "0964b369410d0d4e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 630,
        "y": 460,
        "wires": [
            [
                "56babe700518f6de"
            ]
        ]
    },
    {
        "id": "7cb89b8e5be45071",
        "type": "mqtt out",
        "z": "2a17b197dd3c27c2",
        "name": "pub",
        "topic": "bruh",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0964b369410d0d4e",
        "x": 940,
        "y": 280,
        "wires": []
    },
    {
        "id": "ae0db3480fbd09f7",
        "type": "inject",
        "z": "2a17b197dd3c27c2",
        "name": "bruh",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bruh",
        "payload": "bruh",
        "payloadType": "str",
        "x": 560,
        "y": 280,
        "wires": [
            [
                "7cb89b8e5be45071"
            ]
        ]
    },
    {
        "id": "56babe700518f6de",
        "type": "debug",
        "z": "2a17b197dd3c27c2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 480,
        "wires": []
    },
    {
        "id": "25c00e6bfdb3f8d8",
        "type": "aedes broker",
        "z": "2a17b197dd3c27c2",
        "name": "",
        "mqtt_port": "1884",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 750,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "9420b11974592f82",
        "type": "mqtt in",
        "z": "24eca7dc1cf10744",
        "name": "sub",
        "topic": "bruh/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "0964b369410d0d4e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 710,
        "y": 420,
        "wires": [
            [
                "17711d6ec3b31904"
            ]
        ]
    },
    {
        "id": "3123aa7651662bbc",
        "type": "mqtt out",
        "z": "24eca7dc1cf10744",
        "name": "pub",
        "topic": "bruh",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0964b369410d0d4e",
        "x": 1020,
        "y": 240,
        "wires": []
    },
    {
        "id": "4031a8f677cbac6f",
        "type": "inject",
        "z": "24eca7dc1cf10744",
        "name": "bruh",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bruh",
        "payload": "bruh",
        "payloadType": "str",
        "x": 640,
        "y": 240,
        "wires": [
            [
                "a7e49306c5317630"
            ]
        ]
    },
    {
        "id": "17711d6ec3b31904",
        "type": "debug",
        "z": "24eca7dc1cf10744",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 440,
        "wires": []
    },
    {
        "id": "6f71feaf064bbd51",
        "type": "aedes broker",
        "z": "24eca7dc1cf10744",
        "name": "",
        "mqtt_port": "1884",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 830,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a7e49306c5317630",
        "type": "function",
        "z": "24eca7dc1cf10744",
        "name": "",
        "func": "msg.payload = msg.payload.toUpperCase()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 240,
        "wires": [
            [
                "3123aa7651662bbc"
            ]
        ]
    },
    {
        "id": "1e7eb0e3f58bdc44",
        "type": "mqtt in",
        "z": "d8c79dd1e303ba01",
        "name": "sub",
        "topic": "bruh/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "0964b369410d0d4e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 670,
        "y": 460,
        "wires": [
            [
                "ef0bb111d69f65f1"
            ]
        ]
    },
    {
        "id": "cb2dc6fa5de0ecb2",
        "type": "mqtt out",
        "z": "d8c79dd1e303ba01",
        "name": "pub",
        "topic": "bruh",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0964b369410d0d4e",
        "x": 1080,
        "y": 260,
        "wires": []
    },
    {
        "id": "b131b58178bf6f78",
        "type": "inject",
        "z": "d8c79dd1e303ba01",
        "name": "bruh",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bruh",
        "payload": "bruh",
        "payloadType": "str",
        "x": 700,
        "y": 260,
        "wires": [
            [
                "18469a7a744152dd"
            ]
        ]
    },
    {
        "id": "ef0bb111d69f65f1",
        "type": "debug",
        "z": "d8c79dd1e303ba01",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 460,
        "wires": []
    },
    {
        "id": "0880db2df67cd9aa",
        "type": "aedes broker",
        "z": "d8c79dd1e303ba01",
        "name": "",
        "mqtt_port": "1884",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 890,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "18469a7a744152dd",
        "type": "function",
        "z": "d8c79dd1e303ba01",
        "name": "",
        "func": "msg.payload = msg.payload.toUpperCase()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 240,
        "wires": [
            [
                "cb2dc6fa5de0ecb2"
            ]
        ]
    },
    {
        "id": "47aea3b59c843af5",
        "type": "mqtt out",
        "z": "d8c79dd1e303ba01",
        "name": "pub",
        "topic": "bruh",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0964b369410d0d4e",
        "x": 1070,
        "y": 340,
        "wires": []
    },
    {
        "id": "51c961f027cfc15a",
        "type": "inject",
        "z": "d8c79dd1e303ba01",
        "name": "1+2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bruh",
        "payload": "{\"bruh1\":1,\"bruh2\":2}",
        "payloadType": "json",
        "x": 690,
        "y": 340,
        "wires": [
            [
                "53e53859755ab270"
            ]
        ]
    },
    {
        "id": "53e53859755ab270",
        "type": "function",
        "z": "d8c79dd1e303ba01",
        "name": "",
        "func": "msg.payload = msg.payload.bruh1 + msg.payload.bruh2\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 340,
        "wires": [
            [
                "47aea3b59c843af5"
            ]
        ]
    },
    {
        "id": "1e21844d14d8e192",
        "type": "mqtt out",
        "z": "d8c79dd1e303ba01",
        "name": "pub",
        "topic": "bruh",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0964b369410d0d4e",
        "x": 1050,
        "y": 400,
        "wires": []
    },
    {
        "id": "0d95eae7f0c27ff7",
        "type": "inject",
        "z": "d8c79dd1e303ba01",
        "name": "Count the words: \"This is Kunal Makwana\"",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bruh",
        "payload": "This is Kunal Makwana",
        "payloadType": "str",
        "x": 620,
        "y": 400,
        "wires": [
            [
                "06a4911d3f3ce87a"
            ]
        ]
    },
    {
        "id": "06a4911d3f3ce87a",
        "type": "function",
        "z": "d8c79dd1e303ba01",
        "name": "",
        "func": "   var count = 0;\n   string = msg.payload\n   words = string.split(\" \"); \n    for (i=0 ; i < words.length ; i++){\n       if (words[i] != \"\")\n          count += 1; \n    }\n    msg.payload = \"total words are: \"+count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 400,
        "wires": [
            [
                "1e21844d14d8e192"
            ]
        ]
    },
    {
        "id": "fd4b7a7f50899f62",
        "type": "mqtt in",
        "z": "c143c776df5ef85e",
        "name": "sub",
        "topic": "bruh/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "0964b369410d0d4e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 710,
        "y": 460,
        "wires": [
            [
                "2e6b7e24c1437640"
            ]
        ]
    },
    {
        "id": "b552f665564d2ad7",
        "type": "mqtt out",
        "z": "c143c776df5ef85e",
        "name": "pub",
        "topic": "bruh",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0964b369410d0d4e",
        "x": 1020,
        "y": 280,
        "wires": []
    },
    {
        "id": "fb6cda547d882226",
        "type": "inject",
        "z": "c143c776df5ef85e",
        "name": "bruh",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bruh",
        "payload": "bruh",
        "payloadType": "str",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "b552f665564d2ad7"
            ]
        ]
    },
    {
        "id": "2e6b7e24c1437640",
        "type": "debug",
        "z": "c143c776df5ef85e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 480,
        "wires": []
    },
    {
        "id": "cd2ef961a5cbbc04",
        "type": "aedes broker",
        "z": "c143c776df5ef85e",
        "name": "",
        "mqtt_port": "1884",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 830,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "32b26f457a95d9c5",
        "type": "mqtt in",
        "z": "c143c776df5ef85e",
        "name": "sub",
        "topic": "bruh/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "0964b369410d0d4e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 710,
        "y": 400,
        "wires": [
            [
                "3fe1b5b43adc326e"
            ]
        ]
    },
    {
        "id": "3fe1b5b43adc326e",
        "type": "debug",
        "z": "c143c776df5ef85e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 420,
        "wires": []
    },
    {
        "id": "56e309fea7127d74",
        "type": "mqtt in",
        "z": "c143c776df5ef85e",
        "name": "sub",
        "topic": "bruh/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "0964b369410d0d4e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 710,
        "y": 520,
        "wires": [
            [
                "d136929a6d981539"
            ]
        ]
    },
    {
        "id": "d136929a6d981539",
        "type": "debug",
        "z": "c143c776df5ef85e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 540,
        "wires": []
    },
    {
        "id": "76f6f86b1d56b71e",
        "type": "mqtt in",
        "z": "79dac7d47c5c93a7",
        "name": "sub1",
        "topic": "bruh/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "83125750f53cd3fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 690,
        "y": 360,
        "wires": [
            [
                "18132317985d8be3"
            ]
        ]
    },
    {
        "id": "de422a003c0e202d",
        "type": "mqtt out",
        "z": "79dac7d47c5c93a7",
        "name": "pub1",
        "topic": "bruh",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "83125750f53cd3fb",
        "x": 1110,
        "y": 300,
        "wires": []
    },
    {
        "id": "aa4a241ca58a9746",
        "type": "inject",
        "z": "79dac7d47c5c93a7",
        "name": "bruh1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bruh",
        "payload": "pub1 and sub1",
        "payloadType": "str",
        "x": 720,
        "y": 300,
        "wires": [
            [
                "de422a003c0e202d"
            ]
        ]
    },
    {
        "id": "18132317985d8be3",
        "type": "debug",
        "z": "79dac7d47c5c93a7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 360,
        "wires": []
    },
    {
        "id": "e18cc2248c6c8c8a",
        "type": "aedes broker",
        "z": "79dac7d47c5c93a7",
        "name": "",
        "mqtt_port": "1884",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 910,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "188792d778ba16e9",
        "type": "mqtt in",
        "z": "79dac7d47c5c93a7",
        "name": "sub2",
        "topic": "sen2/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "0964b369410d0d4e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 690,
        "y": 560,
        "wires": [
            [
                "99b0a06e9a272711"
            ]
        ]
    },
    {
        "id": "018d6bf623aaef16",
        "type": "mqtt out",
        "z": "79dac7d47c5c93a7",
        "name": "pub2",
        "topic": "sen2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0964b369410d0d4e",
        "x": 1110,
        "y": 500,
        "wires": []
    },
    {
        "id": "5de8daa484700913",
        "type": "inject",
        "z": "79dac7d47c5c93a7",
        "name": "bruh2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bruh",
        "payload": "pub2 and sub2",
        "payloadType": "str",
        "x": 720,
        "y": 500,
        "wires": [
            [
                "018d6bf623aaef16"
            ]
        ]
    },
    {
        "id": "99b0a06e9a272711",
        "type": "debug",
        "z": "79dac7d47c5c93a7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 560,
        "wires": []
    },
    {
        "id": "d9c6fc7d9d24ad5f",
        "type": "aedes broker",
        "z": "79dac7d47c5c93a7",
        "name": "",
        "mqtt_port": "1885",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 910,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "850538cb722d719e",
        "type": "ui_chart",
        "z": "ebb053fb20be421a",
        "name": "",
        "group": "c915e63700f12513",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "ph",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1130,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "baa77af635289120",
        "type": "ui_chart",
        "z": "ebb053fb20be421a",
        "name": "",
        "group": "ca324de2eaec5a1f",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "orp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1150,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "efcdc343ba6007de",
        "type": "ui_chart",
        "z": "ebb053fb20be421a",
        "name": "",
        "group": "fb97cd149b00f67b",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "do",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1150,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "f2a7dbb6572c7821",
        "type": "inject",
        "z": "ebb053fb20be421a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "ph",
        "payload": "0",
        "payloadType": "num",
        "x": 670,
        "y": 220,
        "wires": [
            [
                "a07b141de712539f"
            ]
        ]
    },
    {
        "id": "a07b141de712539f",
        "type": "function",
        "z": "ebb053fb20be421a",
        "name": "",
        "func": "msg.payload= Math.round(Math.random()*9+1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 220,
        "wires": [
            [
                "3c47fca51a522c51"
            ]
        ]
    },
    {
        "id": "185ee411da20f9c7",
        "type": "inject",
        "z": "ebb053fb20be421a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "orp",
        "payload": "0",
        "payloadType": "num",
        "x": 690,
        "y": 480,
        "wires": [
            [
                "eff15300b19c77e2"
            ]
        ]
    },
    {
        "id": "eff15300b19c77e2",
        "type": "function",
        "z": "ebb053fb20be421a",
        "name": "",
        "func": "msg.payload= Math.round(Math.random()*9+1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 480,
        "wires": [
            [
                "83d258164314c2bf"
            ]
        ]
    },
    {
        "id": "3e2210583f958566",
        "type": "inject",
        "z": "ebb053fb20be421a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "do",
        "payload": "0",
        "payloadType": "num",
        "x": 690,
        "y": 560,
        "wires": [
            [
                "fb4e9966e640e190"
            ]
        ]
    },
    {
        "id": "fb4e9966e640e190",
        "type": "function",
        "z": "ebb053fb20be421a",
        "name": "",
        "func": "msg.payload= Math.round(Math.random()*9+1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 560,
        "wires": [
            [
                "43adf891970c9c9b"
            ]
        ]
    },
    {
        "id": "967e7b60ce7ddf6b",
        "type": "join",
        "z": "ebb053fb20be421a",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "55a3535751698eb9",
                "55fa776e59cee8ca"
            ]
        ]
    },
    {
        "id": "55a3535751698eb9",
        "type": "debug",
        "z": "ebb053fb20be421a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 380,
        "wires": []
    },
    {
        "id": "55fa776e59cee8ca",
        "type": "function",
        "z": "ebb053fb20be421a",
        "name": "",
        "func": "\nif (msg.payload.ph=\"10\" && msg.payload.ec===\"10\" && msg.payload.orp===\"10\" && msg.payload.do===\"10\" && msg.payload.temp===\"10\"){\n    msg.payload = \"Good\";\n}\nelse{\n    msg.payload = \"Poor\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 520,
        "wires": [
            [
                "121ec7d60f4e2616",
                "a74bfd4acf12f489"
            ]
        ]
    },
    {
        "id": "121ec7d60f4e2616",
        "type": "debug",
        "z": "ebb053fb20be421a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 440,
        "wires": []
    },
    {
        "id": "a74bfd4acf12f489",
        "type": "mqtt out",
        "z": "ebb053fb20be421a",
        "name": "",
        "topic": "func",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "83125750f53cd3fb",
        "x": 1550,
        "y": 520,
        "wires": []
    },
    {
        "id": "d65fd924c9dfad6f",
        "type": "mqtt in",
        "z": "ebb053fb20be421a",
        "name": "",
        "topic": "func/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "83125750f53cd3fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1310,
        "y": 600,
        "wires": [
            [
                "d51b5b0b042e8fad",
                "84d71c9a366d0a6d"
            ]
        ]
    },
    {
        "id": "d51b5b0b042e8fad",
        "type": "ui_chart",
        "z": "ebb053fb20be421a",
        "name": "",
        "group": "cbbbd8214b09b908",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Quality",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "40",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1520,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "84d71c9a366d0a6d",
        "type": "ui_text",
        "z": "ebb053fb20be421a",
        "group": "cbbbd8214b09b908",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Quality",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1510,
        "y": 640,
        "wires": []
    },
    {
        "id": "43adf891970c9c9b",
        "type": "mqtt out",
        "z": "ebb053fb20be421a",
        "name": "",
        "topic": "do",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "83125750f53cd3fb",
        "x": 1030,
        "y": 560,
        "wires": []
    },
    {
        "id": "83d258164314c2bf",
        "type": "mqtt out",
        "z": "ebb053fb20be421a",
        "name": "",
        "topic": "orp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "83125750f53cd3fb",
        "x": 1030,
        "y": 480,
        "wires": []
    },
    {
        "id": "76e9b7323e6b26ef",
        "type": "mqtt in",
        "z": "ebb053fb20be421a",
        "name": "",
        "topic": "do/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "83125750f53cd3fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 550,
        "y": 580,
        "wires": [
            [
                "efcdc343ba6007de",
                "967e7b60ce7ddf6b"
            ]
        ]
    },
    {
        "id": "57c62dfb13e46538",
        "type": "mqtt in",
        "z": "ebb053fb20be421a",
        "name": "",
        "topic": "orp/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "83125750f53cd3fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 550,
        "y": 500,
        "wires": [
            [
                "baa77af635289120",
                "967e7b60ce7ddf6b"
            ]
        ]
    },
    {
        "id": "ba2712f9090fee05",
        "type": "mqtt in",
        "z": "ebb053fb20be421a",
        "name": "",
        "topic": "ph/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "83125750f53cd3fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 530,
        "y": 240,
        "wires": [
            [
                "850538cb722d719e",
                "967e7b60ce7ddf6b"
            ]
        ]
    },
    {
        "id": "b2c315a0fb5e4846",
        "type": "aedes broker",
        "z": "ebb053fb20be421a",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": null,
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 1170,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3c47fca51a522c51",
        "type": "mqtt out",
        "z": "ebb053fb20be421a",
        "name": "",
        "topic": "ph",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "83125750f53cd3fb",
        "x": 1010,
        "y": 220,
        "wires": []
    },
    {
        "id": "1e384c71c4b5ba62",
        "type": "coap in",
        "z": "1f921bef89399c18",
        "method": "GET",
        "name": "kitchen server ",
        "server": "87ce5802d8ebbb1b",
        "url": "/lmao/lmh",
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "9d6f0a111960c9ac"
            ]
        ]
    },
    {
        "id": "9d6f0a111960c9ac",
        "type": "function",
        "z": "1f921bef89399c18",
        "name": "response",
        "func": "msg.res.end(\"30\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "28bbbe07057dd1a7",
        "type": "coap request",
        "z": "1f921bef89399c18",
        "method": "GET",
        "observe": false,
        "multicast": false,
        "multicastTimeout": 20000,
        "url": "coap://localhost/lmao/lmh",
        "content-format": "text/plain",
        "raw-buffer": false,
        "name": "client",
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "a89f45b9680c80c6"
            ]
        ]
    },
    {
        "id": "b1ef5bdec34b07ab",
        "type": "inject",
        "z": "1f921bef89399c18",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "num",
        "x": 790,
        "y": 280,
        "wires": [
            [
                "28bbbe07057dd1a7",
                "1b2e92ebefb4d8b7"
            ]
        ]
    },
    {
        "id": "1b2e92ebefb4d8b7",
        "type": "coap request",
        "z": "1f921bef89399c18",
        "method": "GET",
        "observe": false,
        "multicast": false,
        "multicastTimeout": 20000,
        "url": "coap://localhost/lmao/lmh",
        "content-format": "text/plain",
        "raw-buffer": false,
        "name": "client",
        "x": 1010,
        "y": 340,
        "wires": [
            [
                "e6f734c7b605737d"
            ]
        ]
    },
    {
        "id": "e6f734c7b605737d",
        "type": "function",
        "z": "1f921bef89399c18",
        "name": "cool/hot",
        "func": "var res = msg.payload;\n\nif (parseInt(res)>25){\n    msg.payload = \"Weather is HOT\";\n}\nelse{\n    msg.payload = \"Weather is COOL\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 340,
        "wires": [
            [
                "ec7046adcba8cbe4"
            ]
        ]
    },
    {
        "id": "a89f45b9680c80c6",
        "type": "function",
        "z": "1f921bef89399c18",
        "name": "",
        "func": "msg.payload = \"the temperature is \"+msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 260,
        "wires": [
            [
                "ec7046adcba8cbe4"
            ]
        ]
    },
    {
        "id": "98303be4a4393b92",
        "type": "debug",
        "z": "1f921bef89399c18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 400,
        "wires": []
    },
    {
        "id": "82b2524fba165168",
        "type": "e-mail",
        "z": "1f921bef89399c18",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "hopir43208@datakop.com",
        "dname": "mail bhej rha hu",
        "x": 1620,
        "y": 280,
        "wires": []
    },
    {
        "id": "ec7046adcba8cbe4",
        "type": "join",
        "z": "1f921bef89399c18",
        "name": "bruh",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1370,
        "y": 300,
        "wires": [
            [
                "82b2524fba165168",
                "98303be4a4393b92"
            ]
        ]
    },
    {
        "id": "a5a44e4c09bec0f2",
        "type": "coap in",
        "z": "536875e48145519a",
        "method": "GET",
        "name": "weather server ",
        "server": "87ce5802d8ebbb1b",
        "url": "/kitchen/temp",
        "x": 960,
        "y": 240,
        "wires": [
            [
                "cf7498a1c141c389"
            ]
        ]
    },
    {
        "id": "cf7498a1c141c389",
        "type": "function",
        "z": "536875e48145519a",
        "name": "response",
        "func": "msg.res.end(\"temp is 30 degree celcius\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a4a5d8c4c6c6014a",
        "type": "coap request",
        "z": "536875e48145519a",
        "method": "GET",
        "observe": false,
        "multicast": false,
        "multicastTimeout": 20000,
        "url": "coap://localhost/auto/req",
        "content-format": "text/plain",
        "raw-buffer": false,
        "name": "home automation",
        "x": 1050,
        "y": 340,
        "wires": [
            [
                "1aa3341a6ba9fda7"
            ]
        ]
    },
    {
        "id": "1aa3341a6ba9fda7",
        "type": "debug",
        "z": "536875e48145519a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 340,
        "wires": []
    },
    {
        "id": "5b310f61f68ed07f",
        "type": "inject",
        "z": "536875e48145519a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "num",
        "x": 830,
        "y": 360,
        "wires": [
            [
                "a4a5d8c4c6c6014a",
                "5b04ccfe67d8e96b"
            ]
        ]
    },
    {
        "id": "5b04ccfe67d8e96b",
        "type": "coap request",
        "z": "536875e48145519a",
        "method": "GET",
        "observe": false,
        "multicast": false,
        "multicastTimeout": 20000,
        "url": "coap://localhost/kitchen/temp",
        "content-format": "text/plain",
        "raw-buffer": false,
        "name": "weather",
        "x": 1080,
        "y": 420,
        "wires": [
            [
                "f2dce3881049b873"
            ]
        ]
    },
    {
        "id": "0671c9d56d6977f0",
        "type": "debug",
        "z": "536875e48145519a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 420,
        "wires": []
    },
    {
        "id": "a4feaf41d957d602",
        "type": "coap in",
        "z": "536875e48145519a",
        "method": "GET",
        "name": "automation server ",
        "server": "87ce5802d8ebbb1b",
        "url": "/auto/req",
        "x": 990,
        "y": 180,
        "wires": [
            [
                "3bbd2ce885cce03c"
            ]
        ]
    },
    {
        "id": "3bbd2ce885cce03c",
        "type": "function",
        "z": "536875e48145519a",
        "name": "home response",
        "func": "msg.res.end(\"temp is 27 celcius and humidity is 50%\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f2dce3881049b873",
        "type": "openweathermap",
        "z": "536875e48145519a",
        "name": "weather info",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "mumbai",
        "country": "india",
        "language": "en",
        "x": 1230,
        "y": 420,
        "wires": [
            [
                "0671c9d56d6977f0"
            ]
        ]
    },
    {
        "id": "296f30571144804a",
        "type": "coap in",
        "z": "7c02d0a78670807d",
        "method": "GET",
        "name": "automation server ",
        "server": "87ce5802d8ebbb1b",
        "url": "/auto/reqr",
        "x": 990,
        "y": 140,
        "wires": [
            [
                "d556ced7f9509816"
            ]
        ]
    },
    {
        "id": "d556ced7f9509816",
        "type": "function",
        "z": "7c02d0a78670807d",
        "name": "home response",
        "func": "msg.res.end(\"temp is 27 celcius and humidity is 50%\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9eaf6828512fa039",
        "type": "coap request",
        "z": "7c02d0a78670807d",
        "method": "GET",
        "observe": false,
        "multicast": false,
        "multicastTimeout": 20000,
        "url": "coap://localhost/auto/reqr",
        "content-format": "text/plain",
        "raw-buffer": false,
        "name": "home automation",
        "x": 930,
        "y": 280,
        "wires": [
            [
                "2bfaabe51fbc9c30"
            ]
        ]
    },
    {
        "id": "2bfaabe51fbc9c30",
        "type": "debug",
        "z": "7c02d0a78670807d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 280,
        "wires": []
    },
    {
        "id": "2e312d380963b902",
        "type": "inject",
        "z": "7c02d0a78670807d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "num",
        "x": 710,
        "y": 300,
        "wires": [
            [
                "9eaf6828512fa039"
            ]
        ]
    },
    {
        "id": "faebca54b7e1e488",
        "type": "file",
        "z": "76141d478b7316ee",
        "name": "sample",
        "filename": "/home/supastazz/codingfolder/5th Sem Classes/ECE3501-Lab/sample.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 780,
        "y": 100,
        "wires": [
            [
                "df879b1c5abf9fb2"
            ]
        ]
    },
    {
        "id": "df879b1c5abf9fb2",
        "type": "debug",
        "z": "76141d478b7316ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 120,
        "wires": []
    },
    {
        "id": "a114529d5c05e185",
        "type": "inject",
        "z": "76141d478b7316ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 570,
        "y": 120,
        "wires": [
            [
                "faebca54b7e1e488"
            ]
        ]
    },
    {
        "id": "5de911ba7745e391",
        "type": "inject",
        "z": "76141d478b7316ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "testing writiing",
        "payloadType": "date",
        "x": 650,
        "y": 280,
        "wires": [
            [
                "9680bebb4ced5e28"
            ]
        ]
    },
    {
        "id": "9680bebb4ced5e28",
        "type": "function",
        "z": "76141d478b7316ee",
        "name": "msg payload",
        "func": "var d = new Date();\nvar t = d.getTime();\npayload = {\"time\":t,\"payload\":msg.payload,\"topic\":msg.topic}\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 280,
        "wires": [
            [
                "a0e98e2cfea2d4e4",
                "5ad7024bb153b274",
                "39738337cda231ca"
            ]
        ]
    },
    {
        "id": "a0e98e2cfea2d4e4",
        "type": "csv",
        "z": "76141d478b7316ee",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "kunal,bruh,buhhggg",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 980,
        "y": 280,
        "wires": [
            [
                "201b3f1322ce1bdf"
            ]
        ]
    },
    {
        "id": "5ad7024bb153b274",
        "type": "json",
        "z": "76141d478b7316ee",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 960,
        "y": 380,
        "wires": [
            [
                "7c9205fedb445531"
            ]
        ]
    },
    {
        "id": "7c9205fedb445531",
        "type": "file",
        "z": "76141d478b7316ee",
        "name": "",
        "filename": "/home/supastazz/codingfolder/5th Sem Classes/ECE3501-Lab/json_object.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1400,
        "y": 300,
        "wires": [
            [
                "a8ac01e2f38b53c6"
            ]
        ]
    },
    {
        "id": "a8ac01e2f38b53c6",
        "type": "debug",
        "z": "76141d478b7316ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 380,
        "wires": []
    },
    {
        "id": "39738337cda231ca",
        "type": "debug",
        "z": "76141d478b7316ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 380,
        "wires": []
    },
    {
        "id": "201b3f1322ce1bdf",
        "type": "debug",
        "z": "76141d478b7316ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 200,
        "wires": []
    },
    {
        "id": "6884a4e5517e3e84",
        "type": "file in",
        "z": "76141d478b7316ee",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 760,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "1ddd3903f914c49c",
        "type": "file in",
        "z": "03f916c589e3ffbb",
        "name": "read_sample",
        "filename": "/home/supastazz/codingfolder/5th Sem Classes/ECE3501-Lab/sample.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 810,
        "y": 180,
        "wires": [
            [
                "6cdd294f730dec3a",
                "319a636e89ad96c9"
            ]
        ]
    },
    {
        "id": "8b1beb149b64eda2",
        "type": "inject",
        "z": "03f916c589e3ffbb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "1ddd3903f914c49c"
            ]
        ]
    },
    {
        "id": "319a636e89ad96c9",
        "type": "debug",
        "z": "03f916c589e3ffbb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 300,
        "wires": []
    },
    {
        "id": "6cdd294f730dec3a",
        "type": "function",
        "z": "03f916c589e3ffbb",
        "name": "",
        "func": "object = msg.payload;\nmsg.payload =  JSON.parse(object);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 180,
        "wires": [
            [
                "f6e0f71aa83eaf1b"
            ]
        ]
    },
    {
        "id": "f6e0f71aa83eaf1b",
        "type": "debug",
        "z": "03f916c589e3ffbb",
        "name": "encoded",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 180,
        "wires": []
    },
    {
        "id": "1b546d47.9474e3",
        "type": "inject",
        "z": "541eab435004a66f",
        "name": "XML String",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"a\":1}",
        "payloadType": "str",
        "x": 700,
        "y": 240,
        "wires": [
            [
                "f1f70772d05857dd",
                "71e9831dfe1d1b3d"
            ]
        ]
    },
    {
        "id": "1adf407d.6c4fe",
        "type": "debug",
        "z": "541eab435004a66f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 240,
        "wires": []
    },
    {
        "id": "1746464a.87aa4a",
        "type": "xml",
        "z": "541eab435004a66f",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "1adf407d.6c4fe"
            ]
        ]
    },
    {
        "id": "f1f70772d05857dd",
        "type": "file in",
        "z": "541eab435004a66f",
        "name": "book 1",
        "filename": "/home/supastazz/codingfolder/5th Sem Classes/ECE3501-Lab/book_1.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 860,
        "y": 200,
        "wires": [
            [
                "1746464a.87aa4a"
            ]
        ]
    },
    {
        "id": "71e9831dfe1d1b3d",
        "type": "file in",
        "z": "541eab435004a66f",
        "name": "book 2",
        "filename": "/home/supastazz/codingfolder/5th Sem Classes/ECE3501-Lab/book_2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 860,
        "y": 300,
        "wires": [
            [
                "1746464a.87aa4a"
            ]
        ]
    },
    {
        "id": "41d99cd9.ebaab4",
        "type": "subflow:c8c78f4d.679e8",
        "z": "7b11ae5524b65977",
        "name": "",
        "env": [],
        "x": 890,
        "y": 240,
        "wires": [
            [
                "e2c2e37c8f3e172c"
            ]
        ]
    },
    {
        "id": "b86a02cd.cac6a8",
        "type": "inject",
        "z": "7b11ae5524b65977",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "a6d83bee795dac3c"
            ]
        ]
    },
    {
        "id": "27cb50d6.df2568",
        "type": "debug",
        "z": "7b11ae5524b65977",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 160,
        "wires": []
    },
    {
        "id": "a6d83bee795dac3c",
        "type": "file in",
        "z": "7b11ae5524b65977",
        "name": "emplyss csv",
        "filename": "/home/supastazz/codingfolder/5th Sem Classes/ECE3501-Lab/employee CSE.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 240,
        "wires": [
            [
                "41d99cd9.ebaab4"
            ]
        ]
    },
    {
        "id": "e2c2e37c8f3e172c",
        "type": "function",
        "z": "7b11ae5524b65977",
        "name": "",
        "func": "abe_sal = {};\ntempage = 0;\ntempsal = 0;\nfor (i=0;i<100;i++){\n    \n    tempage = tempage+msg.payload[12][\"Age in Yrs.\"][i];\n    // tempage = 100;\n}\nfor (i=0;i<100;i++){\n    \n    tempsal = tempsal+msg.payload[25].Salary[i];\n    // tempage = 100;\n}\nabe_sal[\"avg_age\"] = tempage/100\nabe_sal[\"avg_salary\"] = tempsal/100\nmsg.payload = abe_sal;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 280,
        "wires": [
            [
                "27cb50d6.df2568"
            ]
        ]
    },
    {
        "id": "5fec7cbe4ccfe9ec",
        "type": "fred in",
        "z": "c9d5f45de1504c98",
        "name": "fred in",
        "server": "",
        "client": "21c9b80c00806814",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "53174263857bb1b8",
                "94ca2cf2995f9541",
                "f84461ceff0aa896"
            ]
        ]
    },
    {
        "id": "53174263857bb1b8",
        "type": "debug",
        "z": "c9d5f45de1504c98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 160,
        "wires": []
    },
    {
        "id": "5745304c2c8d8666",
        "type": "fred out",
        "z": "c9d5f45de1504c98",
        "name": "",
        "server": "",
        "client": "21c9b80c00806814",
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "1768766684fd6400",
        "type": "inject",
        "z": "c9d5f45de1504c98",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"From client\"",
        "payloadType": "str",
        "x": 510,
        "y": 400,
        "wires": [
            [
                "63952197ba01e6ea"
            ]
        ]
    },
    {
        "id": "63952197ba01e6ea",
        "type": "ui_form",
        "z": "c9d5f45de1504c98",
        "name": "",
        "label": "",
        "group": "dd969d2656fade9e",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 670,
        "y": 400,
        "wires": [
            [
                "24bde5a255f3d263"
            ]
        ]
    },
    {
        "id": "24bde5a255f3d263",
        "type": "function",
        "z": "c9d5f45de1504c98",
        "name": "",
        "func": "msg.payload= Math.round(Math.random()*60+50);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 400,
        "wires": [
            [
                "5745304c2c8d8666",
                "d0f0703be23f73f3"
            ]
        ]
    },
    {
        "id": "d0f0703be23f73f3",
        "type": "debug",
        "z": "c9d5f45de1504c98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 320,
        "wires": []
    },
    {
        "id": "94ca2cf2995f9541",
        "type": "ui_text",
        "z": "c9d5f45de1504c98",
        "group": "dd969d2656fade9e",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Your report",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 850,
        "y": 240,
        "wires": []
    },
    {
        "id": "f84461ceff0aa896",
        "type": "ui_text",
        "z": "c9d5f45de1504c98",
        "group": "dd969d2656fade9e",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload.report}}",
        "layout": "row-spread",
        "x": 840,
        "y": 300,
        "wires": []
    },
    {
        "id": "db9d59c1d1b3344e",
        "type": "fred in",
        "z": "421f3dd88fac8d7e",
        "name": "fred in",
        "server": "",
        "client": "21c9b80c00806814",
        "x": 790,
        "y": 420,
        "wires": [
            [
                "dbfc30bb44409035"
            ]
        ]
    },
    {
        "id": "dbfc30bb44409035",
        "type": "debug",
        "z": "421f3dd88fac8d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "4487d84441ac20f4",
        "type": "fred out",
        "z": "421f3dd88fac8d7e",
        "name": "",
        "server": "",
        "client": "21c9b80c00806814",
        "x": 1170,
        "y": 300,
        "wires": []
    },
    {
        "id": "8faa3ecc4378eb97",
        "type": "http in",
        "z": "421f3dd88fac8d7e",
        "name": "html",
        "url": "/bruh",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 830,
        "y": 200,
        "wires": [
            [
                "002acb1aba834cb9"
            ]
        ]
    },
    {
        "id": "002acb1aba834cb9",
        "type": "template",
        "z": "421f3dd88fac8d7e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>  \n  <head>\n  </head>\n  <body>\n    <form action=\"/bruh\" method=\"post\">\n      <h1>Enter your information below </h1>\n      <label for=\"press\">blood pressure: </label>\n      <input type=\"text\" name=\"press\" />\n      <label for=\"rate\">heart rate: </label>\n      <input type=\"text\" name=\"rate\" />\n      <label for=\"temp\">temp: </label>\n      <input type=\"text\" name=\"temp\" />\n      <input type=\"submit\" />\n    </form>\n  </body>\n</html>  ",
        "output": "str",
        "x": 1020,
        "y": 200,
        "wires": [
            [
                "e6156bbef20dc306"
            ]
        ]
    },
    {
        "id": "e6156bbef20dc306",
        "type": "http response",
        "z": "421f3dd88fac8d7e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 200,
        "wires": []
    },
    {
        "id": "2d362556506c84d0",
        "type": "http in",
        "z": "421f3dd88fac8d7e",
        "name": "",
        "url": "/bruh",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 860,
        "y": 300,
        "wires": [
            [
                "4487d84441ac20f4"
            ]
        ]
    },
    {
        "id": "8248657981b3b745",
        "type": "function",
        "z": "f444ec4d3b529ef7",
        "name": "litedb",
        "func": "//const sqlite3 = require('sqlite3').verbose();\nvar dbfile = msg.payload;\nmsg.dbfile = dbfile;\nlet db = new sqlite3.Database(\n    dbfile, \n    (err) => {\n  if (err) {\n    console.error(err.message);\n  }\n  console.log('Connected to the SQLITE database.');\n});\ndb.close((err) => {\n  if (err) {\n    console.error(err.message);\n  }\n  console.log('Close the database connection.');\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "sqlite3",
                "module": "sqlite3"
            }
        ],
        "x": 310,
        "y": 280,
        "wires": [
            [
                "f2de18b6bc2083b6"
            ]
        ]
    },
    {
        "id": "806d46b4cbcbd1a0",
        "type": "inject",
        "z": "f444ec4d3b529ef7",
        "name": "Database location",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "dbFileLocation",
        "payload": "/home/burraabhishek19bce1187/Downloads/IOT/lab13/exercise.db",
        "payloadType": "str",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "8248657981b3b745"
            ]
        ]
    },
    {
        "id": "93e09067b3c7536f",
        "type": "inject",
        "z": "f444ec4d3b529ef7",
        "name": "Create Attributes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "TABLE",
        "payload": "(PersonID INT PRIMARY KEY NOT NULL, FirstName VARCHAR NOT NULL, Age INT NOT NULL)",
        "payloadType": "str",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "f9a2d49a503d7eae"
            ]
        ]
    },
    {
        "id": "f9a2d49a503d7eae",
        "type": "function",
        "z": "f444ec4d3b529ef7",
        "name": "CREATE TABLE",
        "func": "dbfile = global.get(\"dbFileName\");\nlet db = new sqlite3.Database(dbfile);\nattrs = msg.payload;\nsql = \"CREATE TABLE \"\nsql += global.get(\"dbTableName\");\nsql += attrs;\nmsg.payload = sql;\ntry {\n    db.run(msg.payload);\n} catch(e) {\n    console.log(e)\n}\ndb.close();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "sqlite3",
                "module": "sqlite3"
            }
        ],
        "x": 320,
        "y": 400,
        "wires": [
            [
                "4273914302eec3e3"
            ]
        ]
    },
    {
        "id": "4273914302eec3e3",
        "type": "debug",
        "z": "f444ec4d3b529ef7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 400,
        "wires": []
    },
    {
        "id": "040825a426ecca2b",
        "type": "function",
        "z": "f444ec4d3b529ef7",
        "name": "INSERT VALUES",
        "func": "dbfile = global.get(\"dbFileName\")\nlet db = new sqlite3.Database(dbfile);\ntry {\n    db.run(msg.payload);\n} catch(e) {\n    console.log(e)\n}\ndb.close();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "sqlite3",
                "module": "sqlite3"
            }
        ],
        "x": 530,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2abe2402045bcdee",
        "type": "function",
        "z": "f444ec4d3b529ef7",
        "name": "",
        "func": "var personName = nodeRandomName({\"first\": true});\nvar age = 1 + Math.floor(120 * Math.random());\nvar createString = (\"INSERT INTO \" \n    + global.get(\"dbTableName\")\n    + \" VALUES (\"\n    + msg.payload \n    + \",\"\n    + JSON.stringify(personName)\n    + \",\"\n    + age\n    + \");\");\nmsg.payload = createString;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "nodeRandomName",
                "module": "node-random-name"
            }
        ],
        "x": 340,
        "y": 460,
        "wires": [
            [
                "040825a426ecca2b"
            ]
        ]
    },
    {
        "id": "5f7e6426293a8dd9",
        "type": "inject",
        "z": "f444ec4d3b529ef7",
        "name": "Insertion (timestamp)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "2abe2402045bcdee"
            ]
        ]
    },
    {
        "id": "751e2cb534bd531d",
        "type": "inject",
        "z": "f444ec4d3b529ef7",
        "name": "Selection",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "TABLE",
        "payload": "SELECT * FROM Persons",
        "payloadType": "str",
        "x": 100,
        "y": 520,
        "wires": [
            [
                "50e62a166733c130"
            ]
        ]
    },
    {
        "id": "50e62a166733c130",
        "type": "function",
        "z": "f444ec4d3b529ef7",
        "name": "RUN SQLITE QUERY",
        "func": "output = []\ndbfile = global.get(\"dbFileName\")\nlet db = new sqlite3.Database(dbfile);\nlet sql = msg.payload;\ndb.all(\"SELECT * FROM \" + global.get(\"dbTableName\"), \n        function(err,rows) {\n    rows.forEach(function (row) { \n        output.push(row);\n    });\n    msg.output = output;\n});\ndb.close();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "sqlite3",
                "module": "sqlite3"
            }
        ],
        "x": 300,
        "y": 520,
        "wires": [
            [
                "a4be97bdc4628edd"
            ]
        ]
    },
    {
        "id": "a4be97bdc4628edd",
        "type": "delay",
        "z": "f444ec4d3b529ef7",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 510,
        "y": 520,
        "wires": [
            [
                "f9ec1a8a82719717"
            ]
        ]
    },
    {
        "id": "9192716b8949b1b8",
        "type": "inject",
        "z": "f444ec4d3b529ef7",
        "name": "Count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "TABLE",
        "payload": "SELECT * FROM Persons",
        "payloadType": "str",
        "x": 90,
        "y": 600,
        "wires": [
            [
                "04d780f02592dd80"
            ]
        ]
    },
    {
        "id": "04d780f02592dd80",
        "type": "function",
        "z": "f444ec4d3b529ef7",
        "name": "RUN SQLITE QUERY",
        "func": "dbfile = global.get(\"dbFileName\")\nlet db = new sqlite3.Database(dbfile);\nlet sql = msg.payload;\ndb.all(\"SELECT * FROM \" + global.get(\"dbTableName\"), \n        function(err,rows) {\n    let count = 0; \n    rows.forEach(function (row) { \n        count += 1;\n    });\n    msg.count = count;\n});\ndb.close();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "sqlite3",
                "module": "sqlite3"
            }
        ],
        "x": 300,
        "y": 600,
        "wires": [
            [
                "52392d1436ffd82e"
            ]
        ]
    },
    {
        "id": "52392d1436ffd82e",
        "type": "delay",
        "z": "f444ec4d3b529ef7",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 510,
        "y": 600,
        "wires": [
            [
                "3734736e783af783"
            ]
        ]
    },
    {
        "id": "f9ec1a8a82719717",
        "type": "ui_template",
        "z": "f444ec4d3b529ef7",
        "group": "93604f4cc1f7efd2",
        "name": "Person",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <table id=\"persons\" style=\"width: 100%\">\n        <tr>\n            <th>PersonID</th>\n            <th>FirstName</th>\n            <th>Age</th>\n        </tr>\n        <tr ng-repeat=\"x in msg.output\">\n            <td>{{msg.output[$index].PersonID}}</td>\n            <td>{{msg.output[$index].FirstName}}</td>\n            <td>{{msg.output[$index].Age}}</td>\n        </tr>\n    </table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 660,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "3734736e783af783",
        "type": "ui_text",
        "z": "f444ec4d3b529ef7",
        "group": "93604f4cc1f7efd2",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Number of persons",
        "format": "{{msg.count}}",
        "layout": "col-center",
        "x": 690,
        "y": 600,
        "wires": []
    },
    {
        "id": "f2de18b6bc2083b6",
        "type": "change",
        "z": "f444ec4d3b529ef7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dbFileName",
                "pt": "global",
                "to": "dbfile",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "3708a5997ee7790e",
        "type": "inject",
        "z": "f444ec4d3b529ef7",
        "name": "Create Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "dbTableName",
        "payload": "Persons",
        "payloadType": "str",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "16bc9d4567cc533a"
            ]
        ]
    },
    {
        "id": "16bc9d4567cc533a",
        "type": "change",
        "z": "f444ec4d3b529ef7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dbTableName",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "64fe9b337f57b919",
        "type": "ui_chart",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "group": "c915e63700f12513",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "ph",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 790,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "e6abc278b5584c1f",
        "type": "ui_chart",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "group": "ca324de2eaec5a1f",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "turbidity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 820,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "747500668be95132",
        "type": "ui_chart",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "group": "fb97cd149b00f67b",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "do",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 810,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "09c3daebca456e24",
        "type": "inject",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "ph",
        "payload": "0",
        "payloadType": "num",
        "x": 330,
        "y": 200,
        "wires": [
            [
                "2b17860e527522a1"
            ]
        ]
    },
    {
        "id": "2b17860e527522a1",
        "type": "function",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "func": "msg.payload= Math.round(Math.random()*9+1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            [
                "64fe9b337f57b919",
                "bed7e95b9198f301"
            ]
        ]
    },
    {
        "id": "2af49cd1ec72c1a9",
        "type": "inject",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "turbidity",
        "payload": "0",
        "payloadType": "num",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "189b619137df1dfd"
            ]
        ]
    },
    {
        "id": "189b619137df1dfd",
        "type": "function",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "func": "msg.payload= Math.round(Math.random()*49+1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 480,
        "wires": [
            [
                "bed7e95b9198f301",
                "e6abc278b5584c1f"
            ]
        ]
    },
    {
        "id": "c4f1aacf698b777d",
        "type": "inject",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "do",
        "payload": "0",
        "payloadType": "num",
        "x": 350,
        "y": 540,
        "wires": [
            [
                "1f6a2fcd28607711"
            ]
        ]
    },
    {
        "id": "1f6a2fcd28607711",
        "type": "function",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "func": "msg.payload= Math.round(Math.random()*9+1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 540,
        "wires": [
            [
                "bed7e95b9198f301",
                "747500668be95132"
            ]
        ]
    },
    {
        "id": "bed7e95b9198f301",
        "type": "join",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 380,
        "wires": [
            [
                "a72203784a967fdb",
                "81f88b7fd0e9b39f"
            ]
        ]
    },
    {
        "id": "a72203784a967fdb",
        "type": "debug",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 260,
        "wires": []
    },
    {
        "id": "81f88b7fd0e9b39f",
        "type": "function",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "func": "if (msg.payload.ph<4  &&(msg.payload.turbidity)<20){\n    msg.payload = \"clear water\";\n}\nelse if (msg.payload.ph>4  &&(msg.payload.turbidity)>=20&&(msg.payload.turbidity)<=50 ){\n    msg.payload = \"not Clear Water\";\n}\nelse if ((msg.payload.ph)>4  && (msg.payload.orp)>50){\n    msg.payload = \"dirty Water\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 440,
        "wires": [
            [
                "e2aba5d842fab925",
                "5b71d9a2ec7b9e6c",
                "27e10a1f4d22e258",
                "cba766481be997d5"
            ]
        ]
    },
    {
        "id": "e2aba5d842fab925",
        "type": "debug",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 320,
        "wires": []
    },
    {
        "id": "5b71d9a2ec7b9e6c",
        "type": "ui_chart",
        "z": "ca8a5cc0046eca93",
        "name": "",
        "group": "cbbbd8214b09b908",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Quality",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "40",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1140,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "27e10a1f4d22e258",
        "type": "ui_text",
        "z": "ca8a5cc0046eca93",
        "group": "cbbbd8214b09b908",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Quality",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 480,
        "wires": []
    },
    {
        "id": "cba766481be997d5",
        "type": "e-mail",
        "z": "ca8a5cc0046eca93",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1060,
        "y": 580,
        "wires": []
    },
    {
        "id": "bd456e4e.359d8",
        "type": "ui_form",
        "z": "91ad17c662921ae4",
        "name": "Dashboard Sign-In",
        "label": "",
        "group": "b82da486.9fc8d8",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 390,
        "y": 100,
        "wires": [
            [
                "ea809461.f36198",
                "a926c1ff.ede37",
                "6cabb33.95cd54c"
            ]
        ]
    },
    {
        "id": "6603f3ab.d89abc",
        "type": "debug",
        "z": "91ad17c662921ae4",
        "name": "Debug Account Log ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 958.0000915527344,
        "y": 61.00000762939453,
        "wires": []
    },
    {
        "id": "bc6dfbc9.d9d138",
        "type": "comment",
        "z": "91ad17c662921ae4",
        "name": "Sign-In Section",
        "info": "",
        "x": 390.00000762939453,
        "y": 42.999996185302734,
        "wires": []
    },
    {
        "id": "ea809461.f36198",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "Account Log",
        "func": "var accountlog =  flow.get(\"accountlog\") || [] ; \n\naccountlog.push({ accessAt : new Date(), username : msg.payload.username})\n\nflow.set(\"accountlog\", accountlog);\n\nmsg.payload = accountlog;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 589.0000076293945,
        "y": 69.99999618530273,
        "wires": [
            [
                "6603f3ab.d89abc"
            ]
        ]
    },
    {
        "id": "a926c1ff.ede37",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "Account Verification",
        "func": "var accounts =  flow.get(\"accounts\") || [ { username : \"admin\", password : \"admin\"},{ username : \"guest\", password : \"guest\"}] ; \n\nvar username = msg.payload.username ;\nvar password = msg.payload.password ; \n\nmsg.payload = 1;\n\naccounts.forEach(function ( account ){\n    if ( account.username == username ) {\n       msg.payload = 2;\n       if ( account.password == password ) {\n           msg.payload = 0;\n       } \n    }\n});\n\nif ( msg.payload == 0 ) {\n  var currentsocketid = flow.get(\"clientid\") || undefined;\n  if ( currentsocketid !== undefined && currentsocketid !== msg.socketid ) msg.payload = 3;\n}\n// keep the original socketid from msg.socketid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 602.0000457763672,
        "y": 115.0000057220459,
        "wires": [
            [
                "88afc196.8abc2"
            ]
        ]
    },
    {
        "id": "88afc196.8abc2",
        "type": "switch",
        "z": "91ad17c662921ae4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 771.0000419616699,
        "y": 145.9999885559082,
        "wires": [
            [
                "eefb7b9e.f5daa8"
            ],
            [
                "2f57eca.40fa214"
            ],
            [
                "cc34d440.a91948"
            ],
            [
                "126fd334.ed13ed"
            ]
        ]
    },
    {
        "id": "eefb7b9e.f5daa8",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "= 0 : Success",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nflow.set(\"sessionTimer\", currTime);\nflow.set(\"clientid\", msg.socketid);\n/* ui-control payload */\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\"],\n    hide : [\"Dashboard_Signin\",\"Dashboard_History\"]\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940.999885559082,
        "y": 101.99999809265137,
        "wires": [
            [
                "5c0b7126.396e8"
            ]
        ]
    },
    {
        "id": "2f57eca.40fa214",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "= 1 : Unknown User",
        "func": "msg.payload = \"Username Doesn't exist!!!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 961.9998931884766,
        "y": 139,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "cc34d440.a91948",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "= 2 : Wrong Password",
        "func": "msg.payload = \"Invalid Password\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 962.9999618530273,
        "y": 176.0000123977661,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "5c0b7126.396e8",
        "type": "ui_ui_control",
        "z": "91ad17c662921ae4",
        "name": "Go to Sensor Group",
        "x": 1208.0000686645508,
        "y": 101.9999942779541,
        "wires": [
            []
        ]
    },
    {
        "id": "61e843e4.4d74cc",
        "type": "ui_toast",
        "z": "91ad17c662921ae4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Authentication Failed",
        "name": "Authentication Failure Dialog",
        "x": 1227.9999732971191,
        "y": 159,
        "wires": [
            []
        ]
    },
    {
        "id": "6cabb33.95cd54c",
        "type": "debug",
        "z": "91ad17c662921ae4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 571.5000419616699,
        "y": 180.5347557067871,
        "wires": []
    },
    {
        "id": "b960fa16.e7e618",
        "type": "ui_toast",
        "z": "91ad17c662921ae4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "System In Use.",
        "name": "System In-Use Dialog",
        "x": 1211.1111793518066,
        "y": 212.1215353012085,
        "wires": [
            []
        ]
    },
    {
        "id": "126fd334.ed13ed",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "= 4 : System In Use",
        "func": "msg.payload = \"System is used by other user.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 952.4443283081055,
        "y": 213.12152862548828,
        "wires": [
            [
                "b960fa16.e7e618"
            ]
        ]
    },
    {
        "id": "937e9201.0a617",
        "type": "inject",
        "z": "91ad17c662921ae4",
        "name": "Timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "688d5ca02d1f0be4"
            ]
        ]
    },
    {
        "id": "4da58462.7ddd1c",
        "type": "comment",
        "z": "91ad17c662921ae4",
        "name": "complaint",
        "info": "",
        "x": 560,
        "y": 260,
        "wires": []
    },
    {
        "id": "688d5ca02d1f0be4",
        "type": "ui_form",
        "z": "91ad17c662921ae4",
        "name": "",
        "label": "complaint form",
        "group": "c35e46a8.b04ce8",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Complaint",
                "value": "output",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "output": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 740,
        "y": 300,
        "wires": [
            [
                "ecbff46da4e3dfd6",
                "e73c42170a87db47"
            ]
        ]
    },
    {
        "id": "ecbff46da4e3dfd6",
        "type": "debug",
        "z": "91ad17c662921ae4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "e73c42170a87db47",
        "type": "e-mail",
        "z": "91ad17c662921ae4",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "wosih68654@ningame.com",
        "dname": "",
        "x": 1040,
        "y": 320,
        "wires": []
    },
    {
        "id": "8ce40bd6e6ca6c5f",
        "type": "inject",
        "z": "91ad17c662921ae4",
        "name": "Timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 730,
        "y": 440,
        "wires": [
            [
                "db011a4d94759eae"
            ]
        ]
    },
    {
        "id": "db011a4d94759eae",
        "type": "ui_form",
        "z": "91ad17c662921ae4",
        "name": "",
        "label": "feedback",
        "group": "4de9506d.e7364",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "feedback",
                "value": "back",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "back": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 900,
        "y": 440,
        "wires": [
            [
                "47827a40f4602bae",
                "9a75446e3dbeab83"
            ]
        ]
    },
    {
        "id": "47827a40f4602bae",
        "type": "debug",
        "z": "91ad17c662921ae4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 440,
        "wires": []
    },
    {
        "id": "9a75446e3dbeab83",
        "type": "e-mail",
        "z": "91ad17c662921ae4",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "wosih68654@ningame.com",
        "dname": "",
        "x": 1140,
        "y": 480,
        "wires": []
    },
    {
        "id": "3cb7b4f9eca68266",
        "type": "comment",
        "z": "91ad17c662921ae4",
        "name": "Session Management - 30 secs for this demo",
        "info": "",
        "x": 490,
        "y": 580,
        "wires": []
    },
    {
        "id": "5c40869e9806b73d",
        "type": "inject",
        "z": "91ad17c662921ae4",
        "name": "Timer",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 398.50000762939453,
        "y": 668.9999847412109,
        "wires": [
            [
                "f118b7965d43b761",
                "f67015331ed10e93"
            ]
        ]
    },
    {
        "id": "f118b7965d43b761",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "Detect Session Timer",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar SESSION_TIMEOUT = 30000; //15 secs\n\nif ( sessionTimer === 0 /* Inactive, No user signed in */ ) {\n    msg.payload = 2;\n} else {\n    if ( currTime - sessionTimer > SESSION_TIMEOUT ) {\n      msg.payload = 0;  \n    } else {\n      msg.payload = 1;        \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 586.5000381469727,
        "y": 635,
        "wires": [
            [
                "3401272dcfa22dcd"
            ]
        ]
    },
    {
        "id": "3401272dcfa22dcd",
        "type": "switch",
        "z": "91ad17c662921ae4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 756.500072479248,
        "y": 633,
        "wires": [
            [
                "83872d0bef92f534"
            ],
            [
                "ed7b9a15c562a82b"
            ],
            [
                "b765a4c231f07b82"
            ]
        ]
    },
    {
        "id": "83872d0bef92f534",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "Time-Out",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nflow.set(\"sessionTimer\", 0);\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = \"Session Expired! Please singin again!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 912.4999847412109,
        "y": 606.0000038146973,
        "wires": [
            [
                "7f9871b5a136b53f",
                "bb5ea3d76bf8ce6b"
            ]
        ]
    },
    {
        "id": "7f9871b5a136b53f",
        "type": "ui_toast",
        "z": "91ad17c662921ae4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Session Timeout",
        "name": "Time-Out Dialog",
        "x": 1100.000114440918,
        "y": 572.0000038146973,
        "wires": [
            []
        ]
    },
    {
        "id": "cd39fa1df8134d8d",
        "type": "ui_ui_control",
        "z": "91ad17c662921ae4",
        "name": "Go to Signin Group",
        "x": 1307.0000324249268,
        "y": 607.9999885559082,
        "wires": [
            []
        ]
    },
    {
        "id": "bb5ea3d76bf8ce6b",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "Sign-In Redirection",
        "func": "var msg = {};\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    hide : [\"Dashboard_SensorData\", \n            \"Dashboard_History\"],\n    show : [\"Dashboard_Signin\"]\n}\n};\n\nflow.set(\"clientid\", undefined);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1110.5000228881836,
        "y": 609,
        "wires": [
            [
                "cd39fa1df8134d8d"
            ]
        ]
    },
    {
        "id": "59915f180372715b",
        "type": "ui_toast",
        "z": "91ad17c662921ae4",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Timer",
        "name": "Display Remaining Time",
        "x": 890,
        "y": 760,
        "wires": []
    },
    {
        "id": "f67015331ed10e93",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "Calculating Remaining Time (Debug)",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar remainingSecs = Math.floor((30000 - (currTime - sessionTimer))/1000) + 1;\n    \nif ( sessionTimer == 0 /* Inactive, No user signed in */ ) {\n    return null;\n} else {\n    \n    if ( remainingSecs <= 7 ) msg.payload = \"Remaining : \" + remainingSecs + \" secs\";  \n    else return null;\n}\n\nmsg.socketid = flow.get(\"clientid\") || \"B1234\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 760,
        "wires": [
            [
                "59915f180372715b"
            ]
        ]
    },
    {
        "id": "cca472bb85ddafc0",
        "type": "ui_ui_control",
        "z": "91ad17c662921ae4",
        "name": "Stay in Sensor Group",
        "x": 1257.000099182129,
        "y": 646.9999980926514,
        "wires": [
            []
        ]
    },
    {
        "id": "ed7b9a15c562a82b",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "Sensor/History Goup",
        "func": "var msg = {};\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\", \"Dashboard_History\"],\n    hide : [\"Dashboard_Signin\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 954.0000305175781,
        "y": 646.9999961853027,
        "wires": [
            [
                "cca472bb85ddafc0"
            ]
        ]
    },
    {
        "id": "b765a4c231f07b82",
        "type": "function",
        "z": "91ad17c662921ae4",
        "name": "Signin Goup",
        "func": "var msg = {};\nmsg.payload = { group: {\n    hide : [\"Dashboard_SensorData\", \"Dashboard_History\"],\n    show : [\"Dashboard_Signin\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 925.0000915527344,
        "y": 688.0000343322754,
        "wires": [
            [
                "d81b948a4b66add1"
            ]
        ]
    },
    {
        "id": "d81b948a4b66add1",
        "type": "ui_ui_control",
        "z": "91ad17c662921ae4",
        "name": "Go to Signin Group",
        "x": 1245.0002479553223,
        "y": 685.0000343322754,
        "wires": [
            []
        ]
    },
    {
        "id": "7bf9b752487c742b",
        "type": "comment",
        "z": "91ad17c662921ae4",
        "name": "Feedback",
        "info": "",
        "x": 540,
        "y": 440,
        "wires": []
    },
    {
        "id": "1e0841f1.ac68fe",
        "type": "http in",
        "z": "f48aaeef23605001",
        "name": "",
        "url": "/mysite",
        "method": "get",
        "swaggerDoc": "",
        "x": 370,
        "y": 320,
        "wires": [
            [
                "4c783328.03dc2c"
            ]
        ]
    },
    {
        "id": "5de0bbd4.6c8574",
        "type": "http in",
        "z": "f48aaeef23605001",
        "name": "",
        "url": "/mysitepost",
        "method": "post",
        "swaggerDoc": "",
        "x": 390,
        "y": 520,
        "wires": [
            [
                "80321000.f2dc5",
                "75913f37.78e6e"
            ]
        ]
    },
    {
        "id": "4c783328.03dc2c",
        "type": "function",
        "z": "f48aaeef23605001",
        "name": "msg.url = \"mysitepost\";",
        "func": "msg.url = \"mysitepost\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 320,
        "wires": [
            [
                "b2f5bdf9.e09f1"
            ]
        ]
    },
    {
        "id": "80321000.f2dc5",
        "type": "debug",
        "z": "f48aaeef23605001",
        "name": "mysitepost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 520,
        "wires": []
    },
    {
        "id": "8de9647.b8a9a98",
        "type": "http response",
        "z": "f48aaeef23605001",
        "name": "",
        "x": 1050,
        "y": 480,
        "wires": []
    },
    {
        "id": "b2972258.ecf54",
        "type": "template",
        "z": "f48aaeef23605001",
        "name": "CSS",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "input[type=text], select {\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\ninput[type=submit] {\n    width: 100%;\n    background-color: #4CAF50;\n    color: white;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\ninput[type=submit]:hover {\n    background-color: #45a049;\n}\n\ndiv {\n    border-radius: 5px;\n    background-color: #f2f2f2;\n    padding: 20px;\n}",
        "x": 770,
        "y": 420,
        "wires": [
            [
                "f3b55ea2.f4d51"
            ]
        ]
    },
    {
        "id": "b2f5bdf9.e09f1",
        "type": "template",
        "z": "f48aaeef23605001",
        "name": "JavaScript",
        "field": "payload.script",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "plain",
        "template": "$(document).ready(function(e) {\n    \n    $(\"form[ajax=true]\").submit(function(e) {\n        \n        e.preventDefault();\n        \n        var form_data = $(this).serialize();\n        var form_url = $(this).attr(\"action\");\n        var form_method = $(this).attr(\"method\").toUpperCase();\n        \n        $(\"#loadingimg\").show();\n        \n        $.ajax({\n            url: form_url, \n            type: form_method,      \n            data: form_data,     \n            cache: false,\n            success: function(returnhtml){                          \n                $(\"#result\").html(returnhtml); \n                $(\"#loadingimg\").hide();                    \n            }           \n        });    \n        \n    });\n    \n});",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "b2972258.ecf54"
            ]
        ]
    },
    {
        "id": "d2c0bc2a.05a02",
        "type": "http response",
        "z": "f48aaeef23605001",
        "name": "",
        "x": 1050,
        "y": 420,
        "wires": []
    },
    {
        "id": "f3b55ea2.f4d51",
        "type": "template",
        "z": "f48aaeef23605001",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n  <head>\n    <title>My Site</title>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\n    <style>{{{payload.style}}}</style>\n  </head>\n  \n\n    <h2>Using CSS to style an HTML form with AJAX POST and Node-RED</h2>\n    <h4><a href=\"http://www.internetoflego.com\">Internet of LEGO</a></h4>\n\n<div>\n  <form method=\"post\" action=\"/{{url}}\" ajax=\"true\">\n    <label for=\"fname\">First Name</label>\n    <input type=\"text\" id=\"fname\" name=\"firstname\">\n\n    <label for=\"lname\">Last Name</label>\n    <input type=\"text\" id=\"lname\" name=\"lastname\">\n\n    <label for=\"country\">Country</label>\n    <select id=\"country\" name=\"country\">\n      <option value=\"uk\">United Kingdom</option>\n      <option value=\"canada\">Canada</option>\n      <option value=\"usa\">USA</option>\n    </select>\n  \n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</div>\n<div>\n    <span id=\"result\"></span>\n</div>\n\n</body>\n</html>\n<script>{{{payload.script}}}</script>",
        "x": 910,
        "y": 420,
        "wires": [
            [
                "d2c0bc2a.05a02"
            ]
        ]
    },
    {
        "id": "57316751.8bd948",
        "type": "comment",
        "z": "f48aaeef23605001",
        "name": "Login Form",
        "info": "",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "ad88b28c.bc842",
        "type": "function",
        "z": "f48aaeef23605001",
        "name": "return msg.payload to client",
        "func": "msg.payload = 'The following data was submitted and available in the msg.payload: '+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 480,
        "wires": [
            [
                "8de9647.b8a9a98"
            ]
        ]
    },
    {
        "id": "75913f37.78e6e",
        "type": "json",
        "z": "f48aaeef23605001",
        "name": "",
        "x": 590,
        "y": 480,
        "wires": [
            [
                "ad88b28c.bc842"
            ]
        ]
    },
    {
        "id": "86c08a83.385758",
        "type": "comment",
        "z": "f48aaeef23605001",
        "name": "Website",
        "info": "",
        "x": 350,
        "y": 240,
        "wires": []
    },
    {
        "id": "111485fa.14c4aa",
        "type": "comment",
        "z": "f48aaeef23605001",
        "name": "Form Submission",
        "info": "",
        "x": 380,
        "y": 460,
        "wires": []
    },
    {
        "id": "77ab4f1fc1387717",
        "type": "inject",
        "z": "d22c141a78fa65eb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"temp\":21}",
        "payloadType": "json",
        "x": 520,
        "y": 460,
        "wires": [
            [
                "376c2b942c4275ef"
            ]
        ]
    },
    {
        "id": "376c2b942c4275ef",
        "type": "http request",
        "z": "d22c141a78fa65eb",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://demo.thingsboard.io/api/v1/YxIhE6UBaF6aSjchu2wX/telemetry",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 460,
        "wires": [
            [
                "decf9a3632cbe98d"
            ]
        ]
    },
    {
        "id": "decf9a3632cbe98d",
        "type": "debug",
        "z": "d22c141a78fa65eb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 460,
        "wires": []
    }
]